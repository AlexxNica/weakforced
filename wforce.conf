webserver("0.0.0.0:8084", "super")
setKey("Ay9KXgU3g4ygK+qWT0Ut4gH8PPz02gbtPeXWPdjD0HE=")
controlSocket("0.0.0.0:4004")

bulkRetrievers = newNetmaskGroup()
--bulkRetrievers:addMask("130.161.0.0/16")
--bulkRetrievers:addMask("145.132.0.0/16")

field_map = {}
field_map["diffFailedPasswords"] = "hll"
newStringStatsDB("OneHourDB", 600, 6, field_map)

function twreport(lt)
	if (not lt.success)
	then
	   sdb = getStringStatsDB("OneHourDB")
	   sdb:twAdd(lt.remote, "diffFailedPasswords", lt.pwhash)
	   addrlogin = lt.remote:tostring() .. lt.login
	   sdb:twAdd(addrlogin, "diffFailedPasswords", lt.pwhash)
	end
end

setReport(twreport)

function allow(lt)
	sdb = getStringStatsDB("OneHourDB")

	if(bulkRetrievers:match(lt.remote))
	then
		-- return <return value>, <message for client>, <log message>, <log key-values>
		return 0, "", "bulkRetrievers match", {}
	end

	if(sdb:twGet(lt.remote, "diffFailedPasswords") > 50)
	then
		return -1, "", "too many different failed password attempts by IP", { attempts=50 }
	end

	addrlogin = lt.remote:tostring() .. lt.login
	
	if(sdb:twGet(addrlogin, "diffFailedPasswords") > 3)
	then
		return 3, "", "too many different failed password attempts by IP/login", { attempts=3 }
	end

	-- you *must* return with 4 arguments like this:  <return value>, <message for client>, <log message>, <log key-values>
	return 0, "", "", { defaultReturn=1 }
end

setAllow(allow)

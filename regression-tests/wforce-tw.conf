field_map = {}
field_map["countLogins"] = "int"
field_map["failedLogins"] = "int"
field_map["subTest"] = "int"
field_map["diffPasswords"] = "hll"
field_map["diffIPs"] = "hll"
field_map["countryCount"] = "countmin"

sdb = newStringStatsDB("15SecondsFirstDB",1,15,field_map)

sdb_prefix = newStringStatsDB("15SecondsSecondDB",1,15,field_map)
sdb_prefix:twSetv4Prefix(24)
sdb_prefix:twSetv6Prefix(64)

sdb_small = newStringStatsDB("15SecondsSmallDB",1,15,field_map)
sdb_small:twSetMaxSize(10)

initGeoIPDB()

function twreport(lt)
	print("twreport")
	cur_ct = lookupCountry(lt.remote) 
	sdb:twAdd(lt.login, "countLogins", 1)
	if (not lt.success)
	then
	   sdb:twAdd(lt.remote, "failedLogins", 1)
	end
	sdb:twSub(lt.login, "subTest", 1)
	sdb:twAdd(lt.login, "diffPasswords", lt.pwhash)
	sdb:twAdd(lt.login, "diffIPs", lt.remote)
	sdb_prefix:twAdd(lt.remote, "countryCount", cur_ct)
	sdb_small:twAdd(lt.login, "countLogins", 1)
end

function twallow(lt)
	print("twallow")

        for k, v in pairs(lt.attrs) do
             if ((k == "accountStatus") and (v == "blocked"))
             then
                return -1
             end
        end
        for k, v in pairs(lt.attrs_mv) do
             for i, vi in ipairs(v) do
                  if ((k == "countryList") and (vi == "Blockmestan"))
                  then
                        return -1
                  end
              end
        end

       	cur_ct = lookupCountry(lt.remote)
	if (cur_ct == "JP")
       	then
		return -1
	end

	if (sdb:twGet(lt.login, "diffPasswords") > 20)
	then
		return -1
	end

	if (sdb:twGet(lt.remote, "failedLogins") > 30)
	then
		return -1
	end

	if (sdb:twGet(lt.login, "diffIPs") > 10)
	then
		return -1
	end

	if (sdb:twGet(lt.login, "subTest") < -40)
	then
		return -1
	end

	if (sdb_prefix:twGet(lt.remote, "countryCount", "AU") > 10)
	then
		return -1
	end

	if (sdb_small:twGetSize() > 15)
	then
		return -1
	end

	return 0
end

setAllow(twallow)

setReport(twreport)